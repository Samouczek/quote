{"version":3,"sources":["ShowQuote.js","GetQuotes.js","App.js","index.js"],"names":["randomQuote","array","Math","floor","random","length","ShowQuote","useState","data","setData","prevQuote","setPrevQuote","quote","setQuote","prevAuthor","setPrevAuthor","author","setAuthor","useEffect","successCallback","fetch","method","then","response","json","catch","err","console","log","className","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAIMA,EAAc,SAACC,GACjB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMI,OAAO,KAGrC,SAASC,IAAa,IAAD,EACRC,mBAAS,IADD,mBACzBC,EADyB,KACnBC,EADmB,OAEEF,mBAAS,IAFX,mBAEzBG,EAFyB,KAEdC,EAFc,OAGNJ,mBAAS,IAHH,mBAGzBK,EAHyB,KAGlBC,EAHkB,OAIIN,mBAAS,IAJb,mBAIzBO,EAJyB,KAIbC,EAJa,OAKJR,mBAAS,IALL,mBAKzBS,EALyB,KAKjBC,EALiB,KAOhCC,qBAAU,WCdY,IAACC,IDeTV,ECdbW,MAAM,wIAAyI,CAC3IC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACd,GACHW,EAAgBX,MAEnBiB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QDQ/B,IAEFR,qBAAU,WACN,GAAIV,EAAM,CAAC,IAAD,EACkBA,EAAKR,EAAYQ,IAAlCI,EADD,EACCA,MAAOI,EADR,EACQA,OACdH,EAASD,GACTK,EAAUD,MAEhB,CAACR,IAmBH,OACI,sBAAKqB,UAAW,YAAhB,UACI,oBAAGA,UAAW,QAAd,UAAuB,+CAAvB,OACA,oBAAGA,UAAW,QAAd,cAAyBjB,EAAzB,OACA,mBAAGiB,UAAW,SAAd,SAAyBb,IACzB,wBAAQa,UAAW,MAAOC,QAdf,WACXpB,IACAG,EAASH,GACTO,EAAUH,GACVH,EAAa,IACbI,EAAc,MASd,8BACA,wBAAQc,UAAW,MAAOC,QAvBf,WACfnB,EAAaC,GACbG,EAAcC,GACd,IAAMZ,EAASI,EAAKR,EAAYQ,IAChCK,EAAST,EAAOQ,OAChBK,EAAUb,EAAOY,SAkBb,qCEvCGe,MARf,WACE,OACC,mCACE,cAACzB,EAAD,OCDL0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.0767697c.chunk.js","sourcesContent":["import {useEffect, useState} from \"react\";\nimport {GetQuotes} from \"./GetQuotes\";\n\n\nconst randomQuote = (array) => {\n    return Math.floor(Math.random() * (array.length-1));\n}\n\nexport default function ShowQuote() {\n    const [data, setData] = useState('');\n    const [prevQuote, setPrevQuote] = useState('');\n    const [quote, setQuote] = useState('');\n    const [prevAuthor, setPrevAuthor] = useState('')\n    const [author, setAuthor] = useState('')\n\n    useEffect(() => {\n        GetQuotes(setData);\n    },[]);\n\n    useEffect(() => {\n        if (data) {\n            const {quote, author} = data[randomQuote(data)];\n            setQuote(quote);\n            setAuthor(author)\n        }\n    },[data]);\n\n    const handleNext = () => {\n        setPrevQuote(quote);\n        setPrevAuthor(author);\n        const random = data[randomQuote(data)];\n        setQuote(random.quote);\n        setAuthor(random.author)\n    }\n\n    const handlePrev = () => {\n        if (prevQuote) {\n            setQuote(prevQuote);\n            setAuthor(prevAuthor)\n            setPrevQuote('');\n            setPrevAuthor('');\n        }\n    }\n\n    return (\n        <div className={'container'}>\n            <p className={'title'}><strong> Cytat:  </strong> </p>\n            <p className={'quote'}>\"{quote}\"</p>\n            <p className={'author'}>{author}</p>\n            <button className={'btn'} onClick={handlePrev}> Poprzedni cytat</button>\n            <button className={'btn'} onClick={handleNext}> NastÄ™pny cytat</button>\n        </div>\n    );\n}","\n export const GetQuotes = (successCallback) => {\n     fetch('https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json', {\n         method: \"GET\",\n     })\n         .then((response) => response.json())\n         .then((data) =>{\n             successCallback(data);\n         })\n         .catch((err) => console.log(err))\n }\n\n\n\n\n","import './App.css';\nimport ShowQuote from \"./ShowQuote\";\n\nfunction App() {\n  return (\n   <>\n     <ShowQuote/>\n   </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}